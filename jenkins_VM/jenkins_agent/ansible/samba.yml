---
- ansible.builtin.import_playbook: docker.yml

- name: Configure VM with Samba
  hosts: "{{ host }}"
  remote_user: jenkins
  become: true

  tasks:
    - name: Linux users and groups - Create groups
      ansible.builtin.group:
        name: "{{ item.0.name }}{{ item.1.name }}"
        gid: "{{ item.0.gid + item.1.base_value }}"
      loop: "{{ users_groups | product(gid) }}"
      loop_control:
        label: "{{ item.0.name }}{{ item.1.name }}"

    - name: Linux users and groups - Create users
      ansible.builtin.user:
        name: "{{ item.name }}"
        group: "{{ users_default_group }}"
        groups: "{{ item.groups }}"
        append: true
        update_password: on_create
        shell: "/sbin/nologin"
        create_home: false
        uid: "{{ item.uid }}"
      loop: "{{ users_account }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Debian - Mount hard disk
      ansible.posix.mount:
        path: "{{ data_source }}"
        src: "/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1-part1"
        fstype: ext4
        state: mounted

    - name: Debian - Create shared folders
      ansible.builtin.file:
        path: "{{ data_source }}/{{ item.name }}"
        state: directory
        group: "users"
        mode: u=rwx,g=rwx,o=x,g+s
      loop: "{{ users_groups }}"
      loop_control:
        label: "{{ data_source }}/{{ item.name }}"

    - name: Samba - Install packages
      ansible.builtin.apt:
        name: "{{ item }}"
      loop:
        - samba
        - keepalived

    - name: Samba - Stop netbios service
      ansible.builtin.service:
        name: nmbd
        state: stopped
        enabled: false
    
    - name: Samba - Create users
      ansible.builtin.shell:
        cmd: |
          echo -e '\n\n' | pdbedit -at {{ item.name }}
          pdbedit -u {{ item.name }} --set-nt-hash {{ item.passwd_hash }}
      args:
        executable: /bin/bash
      loop: "{{ users_account }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Samba - Create configuration file
      ansible.builtin.template:
        src: smb.conf.j2
        dest: /etc/samba/smb.conf
        owner: root
        group: root
        mode: 0644
      notify:
        - Samba - Restart service

    - name: Keepalived - Create configuration file
      ansible.builtin.template:
        src: "./templates/keepalived.conf.j2"
        dest: "/etc/keepalived/keepalived.conf"
        owner: root
        group: root
        mode: 0644
        lstrip_blocks: yes
      notify:
        - Keepalived - Restart service

    - name: Docker/Syncthing - Create docker-compose file
      ansible.builtin.template:
        src: ./templates/docker-compose.yml.j2
        dest: "/home/jenkins/docker-compose-{{ host }}.yml"
        lstrip_blocks: yes

    - name: Docker/Syncthing - Create config folder
      ansible.builtin.file:
        path: "{{ data_source }}/Informatique/Config/{{ inventory_hostname }}"
        state: directory
        owner: "nas_user"
        group: "users"
      loop:
        - "{{ data_source }}/Informatique/Config"
        - "{{ data_source }}/Informatique/Config/{{ inventory_hostname }}"

    - name: Docker/Syncthing - Build images and Deploy containers
      community.docker.docker_compose_v2:
        project_src: "/home/jenkins"
        files:
          - "/home/jenkins/docker-compose-{{ host }}.yml"
        build: always
        remove_orphans: true
      # register: jenkins_service_build_deploy

    # - name: Docker/Syncthing - Check build and deployment result
    #   debug: msg="{{ jenkins_service_build_deploy.stdout_lines }}"

  handlers:
    - name: Samba - Restart service
      ansible.builtin.service:
        name: smbd
        state: restarted
        enabled: true

    - name: Keepalived - Restart service
      ansible.builtin.service:
        name: keepalived
        state: restarted
        enabled: true
...
